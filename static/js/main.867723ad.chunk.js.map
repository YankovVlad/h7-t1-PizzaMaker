{"version":3,"sources":["components/PizzaEditor/Editor-item.js","components/PizzaEditor/Bg.js","components/PizzaEditor/Pizza.js","components/Navbar/NavbarBtn.js","components/Navbar/Navbar.js","components/App/Loader.js","components/LoginWindow/LoginWindow.js","components/App/App.js","index.js"],"names":["EditorItem","state","selected","onClickSelect","id","props","update","setState","disabled","this","disable","onClick","className","ingredient","label","React","Component","BgPizza","isActive","class","Pizza","choiseLimit","counter","ingredientState","cheese","pepperoni","jalapeno","pineapple","onion","cucumber","bacon","setCounter","value","checkAndChangeById","arr","targetKey","targetValue","forEach","elem","setValue","obj","key","newObj","Object","assign","veg","map","NavbarBtn","useState","isLogin","setIsLogin","useEffect","updateIsLogin","Navbar","user","setUser","data","currentUser","name","email","picture","src","alt","btnState","Loader","LoginWindow","phone","setPhone","password","setPassword","activeModal","setActiveModal","resPost","setResultPost","loader","setLoader","err","setErr","testUser","type","onChange","event","target","placeholder","JSON","stringify","axios","get","then","response","userData","reject","setTimeout","updateClose","innerText","App","isActiveModalLogin","setisActiveModalLogin","checkUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.867723ad.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nclass EditorItem extends React.Component {\r\n    state = {\r\n        selected: false,\r\n    }\r\n\r\n    onClickSelect = () => {\r\n        const selected = !this.state.selected\r\n        const id = this.props.id\r\n\r\n        this.props.update(selected, id)\r\n        this.setState({ selected: !this.state.selected })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // Тернарник, делающий проверку состояния - заблокирован ли? Если нет, то активен ли? И присваиваются соответсвующие классы css.\r\n            <button\r\n                disabled={this.props.disable && !this.state.selected ? true : false}\r\n                onClick={this.onClickSelect}\r\n                className={this.props.disable && !this.state.selected ? (\"editor__item editor__item-disabled\"\r\n                ) : (\r\n                    this.state.selected ? (\"editor__item editor__item-active\"\r\n                    ) : (\r\n                        \"editor__item editor__item-default\"))}>\r\n\r\n                <span className=\"editor__text\">{this.props.ingredient.label}</span>\r\n                <div\r\n                    className={this.state.selected ? 'editor__indicator editor__indicator--true' : 'editor__indicator editor__indicator--false'}\r\n                >\r\n                </div>\r\n\r\n            </button>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditorItem;","import React from 'react'\r\n\r\n\r\nexport class BgPizza extends React.Component {\r\n\r\n    render () {\r\n       \r\n        return (\r\n            <div className={this.props.ingredient.isActive ? this.props.ingredient.class : ''}></div>\r\n        )\r\n    }\r\n}","import './style.css'\r\nimport React from 'react'\r\nimport EditorItem from './Editor-item'\r\nimport { BgPizza } from './Bg'\r\n\r\n\r\nclass Pizza extends React.Component {\r\n    state = {\r\n        choiseLimit: 5,\r\n        counter: 0,\r\n\r\n        ingredientState: {\r\n            cheese: false,\r\n            pepperoni: false,\r\n            jalapeno: false,\r\n            pineapple: false,\r\n            onion: false,\r\n            cucumber: false,\r\n            bacon: false,\r\n        },\r\n    }\r\n\r\n    setCounter = (value) => {\r\n        this.setState({ counter: value ? this.state.counter + 1 : this.state.counter - 1 })\r\n    }\r\n    // Метод принимает массив, идентификатор компонента, целевой ключ и целевое значение. Перебирает массив и сравнивает id объектов в массиве с id компонета и если true, то мутирует данный объект.\r\n    // Это нужно для присваивания ключа в нужный объект по клику. Иначе значение статично и не принимает в себя state динамично.\r\n    checkAndChangeById = (arr, id, targetKey, targetValue) => {\r\n        arr.forEach((elem) => {\r\n            if (elem.id === id) {\r\n                elem[targetKey] = targetValue\r\n            }\r\n        })\r\n    }\r\n    setValue = (obj, key, value) => {\r\n        const newObj = Object.assign({}, obj)\r\n        newObj[key] = value\r\n        return newObj\r\n    }\r\n\r\n    veg = [\r\n        {\r\n            id: 1,\r\n            label: 'Cheese',\r\n            class: 'ingredient cheese',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'cheese', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n            },\r\n        },\r\n\r\n        {\r\n            id: 2,\r\n            label: 'Pepperoni',\r\n            class: 'ingredient pepperoni',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'pepperoni', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            id: 3,\r\n            label: 'Jalapeno',\r\n            class: 'ingredient jalapeno',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'jalapeno', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            id: 4,\r\n            label: 'Pineapple',\r\n            class: 'ingredient pineapple',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'pineapple', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            id: 5,\r\n            label: 'Onion',\r\n            class: 'ingredient onion',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'onion', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            }\r\n\r\n        },\r\n\r\n        {\r\n            id: 6,\r\n            label: 'Cucumber',\r\n            class: 'ingredient cucumber',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'cucumber', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            },\r\n\r\n        },\r\n        {\r\n            id: 7,\r\n            label: 'Bacon',\r\n            class: 'ingredient bacon',\r\n            isActive: false,\r\n            update: (value, id) => {\r\n                this.setState({ ingredientState: this.setValue(this.state.ingredientState, 'bacon', value) })\r\n                this.setCounter(value)\r\n                this.checkAndChangeById(this.veg, id, 'isActive', value)\r\n\r\n            },\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pizza__wrap\">\r\n                <div className=\"pizza__body\">\r\n                    <h2 className=\"pizza__title\">Create your perfect Pizza</h2>\r\n                    <div className=\"pizza__img\">\r\n\r\n                        {this.veg.map((elem) => {\r\n                            return <BgPizza key={elem.id} ingredient={elem} />\r\n                        })}\r\n\r\n                    </div>\r\n                    <ul className=\"pizza__editor\">\r\n                        <p className={this.state.counter >= this.state.choiseLimit ? 'warning-text' : 'warning-text-hidden'}>{'You can select up to 5 items'}</p>\r\n\r\n                        {this.veg.map((elem) => {\r\n                            return <EditorItem key={elem.id} id={elem.id} ingredient={elem} update={elem.update} disable={this.state.counter >= 5 ? true : false} />\r\n\r\n                        })}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\nexport default Pizza;","import { useState, useEffect } from \"react\"\r\n\r\nexport const NavbarBtn = (props) => {\r\n\r\n\r\n    const [isLogin, setIsLogin] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setIsLogin(props.isLogin)\r\n    }, [props.isLogin])\r\n\r\n    const onClickButtonLogin = () => {\r\n        const active = true\r\n        props.update(active)\r\n\r\n    }\r\n    const onClickButtonLogout = (value) => {\r\n        props.updateIsLogin(value)\r\n    }\r\n\r\n    return (\r\n        <button className={isLogin ? 'btn btn--active' : 'btn'} onClick={isLogin ? () => onClickButtonLogout(true) : onClickButtonLogin}>{props.label}</button>\r\n    )\r\n}","import './style.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { NavbarBtn } from './NavbarBtn'\r\n\r\nexport const Navbar = (props) => {\r\n    const [user, setUser] = useState({})\r\n    const [isLogin, setIsLogin] = useState(false)\r\n\r\n    const update = (value) => {\r\n        props.update(value)\r\n    }\r\n    const updateIsLogin = (value) => {\r\n        props.updateIsLogin(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = props.currentUser\r\n        setUser(data)\r\n        setIsLogin(props.isLogin)\r\n    }, [props.currentUser, props.isLogin])\r\n\r\n    return (\r\n\r\n        <nav className={'nav'}>\r\n            <div className='nav__wrap'>\r\n                <div className={'nav__title'}>\r\n                    <div className={'nav__icon'}></div>\r\n                    <h1 className={'nav__title-text'}>P-Pizza</h1>\r\n                </div>\r\n\r\n                <div className={'nav__userbar'}>\r\n                    <div className={'nav__user-data'}>\r\n                        <p className={'nav__username'}>{isLogin ? user.name : ''}</p>\r\n                        <p className={'nav__username'}>{isLogin ? props.currentUser.email : ''}</p>\r\n                    </div>\r\n                    <div className={isLogin && user.picture ? 'nav__avatar' : 'nav__avatar avatar-guest'}>\r\n                        <img className={isLogin && user.picture ? 'nav__img' : 'hidden'}\r\n                            src={isLogin ? user.picture : ''}\r\n                            alt={'avatar'} />\r\n                    </div>\r\n                    <NavbarBtn update={update}\r\n                        btnState={props.btnState}\r\n                        isLogin={isLogin}\r\n                        label={isLogin ? 'Log out' : 'Sign in'}\r\n                        updateIsLogin={updateIsLogin}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    )\r\n}","export const Loader = () => {\r\n    return (\r\n        <div className={'loader'}>\r\n            <div className={'loader-item item-first'}></div>\r\n            <div className={'loader-item item-second'}></div>\r\n        </div>\r\n    )\r\n}","import './style.css'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\nimport { Loader } from '../App/Loader'\r\n\r\n\r\nexport const LoginWindow = (props) => {\r\n\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [activeModal, setActiveModal] = useState(props.isActive)\r\n    const [resPost, setResultPost] = useState(true)\r\n    const [loader, setLoader] = useState(false)\r\n    const [err, setErr] = useState('Please, enter your number and password')\r\n\r\n    const testUser = { phone: \"+175294567845\", password: \"123\" }\r\n\r\n    const update = (value, userData) => {\r\n        props.update(value, userData)\r\n    }\r\n    const updateClose = (value) => {\r\n        props.updateClose(value)\r\n    }\r\n    const onClickButtonPost = () => {\r\n        // Так как проект был сделан в рамках обучения, у него был учебный бэкенд. Была реализована авторизация, post запрос возвращал пользователя. Это уже импровизация для эмуляции работы авторизации.\r\n\r\n        const data = { phone: phone, password: password }\r\n        setLoader(true)\r\n        if (JSON.stringify(data) === JSON.stringify(testUser)) {\r\n            axios.get('https://jsonplaceholder.typicode.com/users/1', data)\r\n                .then(\r\n                    response => {\r\n                        const userData = response.data\r\n                        const value = !activeModal\r\n                        setActiveModal(value)\r\n                        update(value, userData)\r\n                        setLoader(false)\r\n\r\n                    },\r\n                    reject => {\r\n                        setErr(reject.response.data)\r\n                        setResultPost(false)\r\n                        setTimeout(() => setResultPost(true), 2000)\r\n                        setLoader(false)\r\n\r\n                    }\r\n                )\r\n        }\r\n        if (JSON.stringify(data) !== JSON.stringify(testUser)) {\r\n            setTimeout(() => {\r\n                setLoader(false)\r\n                setResultPost(false)\r\n            }, 1000)\r\n            setTimeout(() => setResultPost(true), 3000)\r\n        }\r\n    }\r\n    const onClickButtonCancel = () => {\r\n        const value = !activeModal\r\n        updateClose(value)\r\n    }\r\n    const onChangePhone = (event) => {\r\n        setPhone(event.target.value)\r\n    }\r\n    const onChangePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const onClickCopyPhone = (event) => {\r\n        setPhone(event.target.innerText)\r\n    }\r\n    const onClickCopyPassword = (event) => {\r\n        setPassword(event.target.innerText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'modal__login'}>\r\n            <div className={'modal__guest'} />\r\n            <div className={'modal__body'}>\r\n\r\n                <input className={resPost ? 'modal__input' : 'modal__input error'} type='tel' onChange={onChangePhone} placeholder={'Telephone number'} value={phone} />\r\n                <input className={resPost ? 'modal__input' : 'modal__input error'} type='password' onChange={onChangePassword} placeholder={'Password'} value={password} />\r\n                <p className={resPost ? 'warning-text-hidden' : 'warning-text'}>{err}</p>\r\n\r\n            </div>\r\n            {loader ? <Loader /> : <div className={'loader-placeholder'} />}\r\n\r\n            <button className={'btn modal__btn'} onClick={onClickButtonPost}>Log in</button>\r\n            <button className={'btn modal__btn'} onClick={onClickButtonCancel}>Cancel</button>\r\n            <p className={'modal__help'}>Test autorization:</p>\r\n            <p className={'modal__help'} >Number: <span onClick={onClickCopyPhone} className={'modal__help copy-btn'}>{testUser.phone}</span>  </p>\r\n            <p className={'modal__help '}>Password: <span onClick={onClickCopyPassword} className={'modal__help copy-btn'}>{testUser.password}</span></p>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import './style.css'\r\nimport { useState } from 'react'\r\nimport Pizza from \"../PizzaEditor/Pizza\"\r\nimport { Navbar } from '../Navbar/Navbar'\r\nimport { LoginWindow } from '../LoginWindow/LoginWindow'\r\n\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [isActiveModalLogin, setisActiveModalLogin] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const [isLogin, setIsLogin] = useState(false)\r\n\r\n    const checkUser = (obj) => {\r\n        for (let key in obj) {\r\n            return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const updateAppFromLogin = (value, user) => {\r\n        setisActiveModalLogin(value)\r\n        setUser(user)\r\n        setIsLogin(checkUser(user))\r\n    }\r\n    const updateAppFromBtn = (value) => {\r\n        setisActiveModalLogin(value)\r\n    }\r\n    const updateIsLogin = (value) => {\r\n        if (value) {\r\n            setIsLogin(false)\r\n            setUser({})\r\n        }\r\n    }\r\n    const modalClose = (value) => {\r\n        setisActiveModalLogin(value)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={'app'}>\r\n            <div className={isActiveModalLogin ? 'modal-wrap visible' : 'modal-wrap hidden'}>\r\n                {isActiveModalLogin ? <LoginWindow\r\n                    update={updateAppFromLogin}\r\n                    updateClose={modalClose}\r\n                    isActive={isActiveModalLogin} /> : null}\r\n            </div>\r\n\r\n            <Navbar update={updateAppFromBtn}\r\n                updateIsLogin={updateIsLogin}\r\n                currentUser={user}\r\n                btnState={isActiveModalLogin}\r\n                isLogin={isLogin}\r\n            />\r\n\r\n            <div className={isActiveModalLogin ? 'hidden' : 'visible'}>\r\n                <Pizza />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { App } from './components/App/App'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}